generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        String    @id @default(uuid())
  name      String
  active    Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  product   Product[]
}

model Image {
  id        String   @id @default(uuid())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Order {
  id        String      @id @default(uuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now())
  clientId  String
  client    Client      @relation(fields: [clientId], references: [id])
  orderLine OrderLine[]
}

model OrderLine {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  orderId   String
  productId String
  quantity  Int
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Product {
  id          String      @id @default(uuid())
  name        String
  description String?
  sku         String?
  slug        String?     @unique
  price       Float
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())
  available   Boolean     @default(true)
  storeId     String
  categoryId  String
  category    Category    @relation(fields: [categoryId], references: [id])
  store       Store       @relation(fields: [storeId], references: [id])
  image       Image[]
  orderLine   OrderLine[]
}

model Store {
  id        String    @id @default(uuid())
  name      String    @unique
  slug      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  ownerId   String
  seller    Seller    @relation(fields: [ownerId], references: [id])
  product   Product[]
}

model Client {
  id        String   @id @default(uuid())
  phone     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  order     Order[]
  user      User     @relation(fields: [userId], references: [id])
  userId    String      @unique
}

model Seller {
  id        String   @id @default(uuid())
  phone     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  store     Store[]
  user      User @relation(fields: [userId], references: [id])
  userId    String  @unique
}

model User {
  id        String   @id @default(uuid())
  phone     String   @unique
  email     String?  @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  role      Role     @default(SELLER)
  seller    Seller?
  client    Client?
}

enum Role {
  CUSTOMER
  SELLER
  ADMIN
}